leetcode_mergemedian.js
คือ โจทย์ที่ฝึกหาค่ามัธยฐาน วิธีคิดคือที่ผมทำ
1. ผมmerge 2 array แล้วทำการ sort ซึ่งผมใช้ความรู้เดิมคือ spread กับ sort
ที่อาจารย์สอน (sort ของเดิมมันจะเรียง string แต่ไม่เรียงตามตัวเลข)
2. ผมสร้าง len เพื่อทราบ n ตามสูตร
(n+1)/2 ซึ่งสูตรนี้ผมฝึกมาจากวิชา AI ที่หา Boxplot
3. ผมเช็ค ว่าความยาวarray เป็นเลขคู่หรือคี่
ถ้าคี่ ผมเอาค่ากลาง (ตำแหน่งจากสูตร) return ออกมาเลย
แต่ถ้าเป็นเลขคู่สมมุติ
[1,2,3,4]
มันจะมีค่าระหว่าง 2 ถึง 3
มันจะต้องเอา เลขระหว่างตำแหน่งมัธยฐานทั้ง 2 มาหาร 2 แล้ว return

ความยากคือ 
ในช่วงแรก ผมใช้วิธีการคำนวณผิด ผมใช้ set แทน array ผลที่ได้มันถูกแต่ พอเจอ test case อื่นๆกลับไม่ถูกต้อง
test แปลกเช่น ให้ 0 มาทุกตัวเลย หรือ แม้แต่ให้เลขซ้ำๆกัน

ฺBookDemo.js 
ผมแก้ข้อผิดพลาดของงานที่ส่งไป ที่ลบ object แล้ว ขึ้น <1 empty item>,
เป็นเพราะว่ามันลบแค่ Value แต่ index ยังอยู่ วิธีการลบจึงมี 2 วิธีที่นิยม
1. ใช้ splice ตัด จะเอา index ออกทั้งก้อน
2. ใช้ filter(q => q.id === id) ได้เหมือนกัน 
ผมว่า filter ใช้ทรัพยากรมากกว่าหน่อย แต่มั่นใจได้ว่าลบออกได้หมดทุกตัว ต่างจาก splice ที่ต้องกำหนด

leetcode_mergetwosortlist.js
โจทย์นี้คือการรวม 2 linked list มาอยู่ linked list เดียวกัน(merge) จากนั้นให้ sort ด้วย
ความเข้าใจแรกของผมคือ linked list มันเหมือนกับ obj เพราะ type of เป็น obj ผมก็เลย merge โดย {...list1,...list2} 
ปัญหาคือ มันmerge ได้แค่ไปเขียน key ทับตัวที่ซ้ำ ทำให้ข้อมูลเลขซ้ำหายไป ผมก็เลยใช้ for of ไม่สามารถใช้ได้เพราะ linked list ไม่มี ตัวเดิน iterable
เหมือน Datatype อื่นๆผมจึงใช้ความรู้ วิชา Basic Programming ผมจำได้ว่า มันจะมี 2 ตัวคือ iterable iterator 
โชคดีที่ผมจดไว้ 
1. interable ของอะไรที่สามารถวนลูป ทำซ้ำๆได้ ใน js คือ object 
    คุณสมบัติมีข้อเดียวคือ เมื่อเรียกแล้วต้องมี return method interator มาให้เรา
2. iterator คือตัวเข้าไปเดินต้องมี method ชื่อว่า next และ next ต้องมี propeties value, done 
    (จะหาข้อมูลที่มีอยู่แล้ว มาให้เรา) ถ้า return แล้วได้ Done คือมันจบแล้วจะไม่สามารถเรียกได้อีกแล้ว

ดังนั้นผมจึงใช้ loop whileในการวนข้อมูลเก็บไปที่ array เพราะ sort ไม่มีใน linked list 
หลังจากผม sort แล้วส่วนต่อมาค่อนข้างยาก เพราะ ผมไม่เลยสร้าง linked List ผมจึงไปเจอ keyword ว่า linked node 
เท่าที่ผมเข้าใจคือ linked list เหมือนโซ่ต่อหลายๆnode แต่ linked node มันคือ ภายในแต่ละ node มันจะมี data กับ address บางที่เข้าใช้ value,pointer
เมื่อเข้าใจแบบนี้แล้ว ผมจึงใช้ for of เพราะ ยังอยู่ในรูปแบบ array -> linked list 
ดังนั้น เราก็ทำเหมือน ที่เราเพิ่มข้อมูลในarray เลย 
เพียงแค่ตอนเพิ่ม tail.next คือ ลูกศรชี้ว่าต้องไปหาใคร
ส่วน tail คือ กล่องของnode หมายความว่า

ถ้ามีการเพิ่ม tail.next ก็จะเพิ่มต่อท้ายจาก tail ที่มันชี้ล่าสุด
แต่เราต้องการให้ มันต่อหลังจากข้อมูลที่เราเพิ่มล่าสุดเราจึงขยับลูกศร tail ให้ชี้ไปที่กล่อง tail.next ล่าสุดจึงเป็นที่มาของ
tail = tail.next
บรรทัดแรกที่เขียน
 let dummy = new ListNode(0);
    let tail = dummy;
จึงหมายความว่า สร้าง 0 แล้วให้ tail ชี้ไปที่ กล่องdummy 0